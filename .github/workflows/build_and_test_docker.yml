name: Build Docker image arm64

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

on:
  push:
    tags:
      - v*
  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag for the image'
        required: true
        default: 'latest'
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: artemkiyashko/shadowbox
  VERSION: ${{ github.ref_name || inputs.version }}
  NODE_IMAGE: node@sha256:b4b7a1dd149c65ee6025956ac065a843b4409a62068bd2b0cbafbb30ca2fab3b

jobs:
  shadowbox:
    name: Shadowbox
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm

      - name: Install NPM Dependencies
        run: npm ci
    
      - name: Build Docker Image
        run: ./task shadowbox:docker:prepare IMAGE_VERSION=${{ github.ref_name }} TARGET_ARCH=arm64 IMAGE_NAME=${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable=true
            type=raw,value=${{ env.VERSION }},enable=true

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./src/shadowbox
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            NODE_IMAGE=${{ env.NODE_IMAGE }}
            VERSION=${{ env.VERSION }}
